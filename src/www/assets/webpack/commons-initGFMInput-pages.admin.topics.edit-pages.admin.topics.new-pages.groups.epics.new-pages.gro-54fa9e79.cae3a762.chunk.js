(this.webpackJsonp=this.webpackJsonp||[]).push([[8],{"+lve":function(e,i,t){"use strict";t.d(i,"f",(function(){return r})),t.d(i,"e",(function(){return o})),t.d(i,"a",(function(){return d})),t.d(i,"c",(function(){return u})),t.d(i,"d",(function(){return l})),t.d(i,"b",(function(){return c}));t("AfGZ");var n=t("mABg"),a=t.n(n);const r=function(e){return!("string"!=typeof e||!e.startsWith("gid://gitlab/"))},s=function(e){return parseInt(`${e}`.replace(/gid:\/\/gitlab\/.*\//g,""),10)},o=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";const i=s(e);return Number.isInteger(i)?i:null},d={Append:"APPEND",Remove:"REMOVE",Replace:"REPLACE"},u=function(e,i){if("string"!=typeof e)throw new TypeError(`type must be a string; got ${typeof e}`);if(!["number","string"].includes(typeof i))throw new TypeError(`id must be a number or string; got ${typeof i}`);return r(i)?i:`gid://gitlab/${e}/${i}`},l=function(e,i){return i.map((function(i){return u(e,i)}))},c=function(e){if(!a()(e))throw new TypeError(`nodes must be an array; got ${typeof e}`);return e.map((function(e){return e.id?{...e,id:o(e.id)}:e}))}},AUIv:function(e,i,t){"use strict";t.d(i,"a",(function(){return n}));class n{constructor(e){return n.singleton||this.initSingleton(e),n.singleton}initSingleton(e){const{currentUser:i,rootPath:t,editable:a,timeTrackingLimitToHours:r}=e;this.currentUser=i,this.rootPath=t,this.editable=a,this.timeEstimate=0,this.totalTimeSpent=0,this.humanTimeEstimate="",this.humanTimeSpent="",this.timeTrackingLimitToHours=r,this.assignees=[],this.reviewers=[],this.isFetching={assignees:!0,reviewers:!0},this.isLoading={},this.autocompleteProjects=[],this.moveToProjectId=0,this.isLockDialogOpen=!1,this.participants=[],this.projectEmailsDisabled=!1,this.subscribeDisabledDescription="",this.subscribed=null,this.changing=!1,n.singleton=this}setAssigneeData(e){let{assignees:i}=e;this.isFetching.assignees=!1,i&&(this.assignees=i)}setReviewerData(e){let{reviewers:i}=e;this.isFetching.reviewers=!1,i&&(this.reviewers=i)}resetChanging(){this.changing=!1}setTimeTrackingData(e){this.timeEstimate=e.time_estimate,this.totalTimeSpent=e.total_time_spent,this.humanTimeEstimate=e.human_time_estimate,this.humanTotalTimeSpent=e.human_total_time_spent}setFetchingState(e,i){this.isFetching[e]=i}setLoadingState(e,i){this.isLoading[e]=i}addAssignee(e){this.findAssignee(e)||(this.changing=!0,this.assignees.push(e))}addReviewer(e){this.findReviewer(e)||this.reviewers.push(e)}updateAssignee(e,i){const t=this.findAssignee({id:e});t&&(t[i]=!t[i])}updateReviewer(e,i){const t=this.findReviewer({id:e});t&&(t[i]=!t[i])}overwrite(e,i){this[e]=i}findAssignee(e){return this.assignees.find((function(i){let{id:t}=i;return t===e.id}))}findReviewer(e){return this.reviewers.find((function(i){let{id:t}=i;return t===e.id}))}removeAssignee(e){e&&(this.changing=!0,this.assignees=this.assignees.filter((function(i){let{id:t}=i;return t!==e.id})))}removeReviewer(e){e&&(this.reviewers=this.reviewers.filter((function(i){let{id:t}=i;return t!==e.id})))}removeAllAssignees(){this.changing=!0,this.assignees=[]}removeAllReviewers(){this.reviewers=[]}setAssigneesFromRealtime(e){this.assignees=e}setAutocompleteProjects(e){this.autocompleteProjects=e}setSubscribedState(e){this.subscribed=e}setMoveToProjectId(e){this.moveToProjectId=e}}},E8Hc:function(e,i){var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"mergeRequestSidebarDetails"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"fullPath"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"iid"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"project"},arguments:[{kind:"Argument",name:{kind:"Name",value:"fullPath"},value:{kind:"Variable",name:{kind:"Name",value:"fullPath"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"mergeRequest"},arguments:[{kind:"Argument",name:{kind:"Name",value:"iid"},value:{kind:"Variable",name:{kind:"Name",value:"iid"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"iid"},arguments:[],directives:[]}]}}]}}]}}],loc:{start:0,end:187}};t.loc.source={body:"query mergeRequestSidebarDetails($fullPath: ID!, $iid: String!) {\n  project(fullPath: $fullPath) {\n    id\n    mergeRequest(iid: $iid) {\n      id\n      iid # currently unused.\n    }\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};var n={};function a(e,i){for(var t=0;t<e.definitions.length;t++){var n=e.definitions[t];if(n.name&&n.name.value==i)return n}}t.definitions.forEach((function(e){if(e.name){var i=new Set;!function e(i,t){if("FragmentSpread"===i.kind)t.add(i.name.value);else if("VariableDefinition"===i.kind){var n=i.type;"NamedType"===n.kind&&t.add(n.name.value)}i.selectionSet&&i.selectionSet.selections.forEach((function(i){e(i,t)})),i.variableDefinitions&&i.variableDefinitions.forEach((function(i){e(i,t)})),i.definitions&&i.definitions.forEach((function(i){e(i,t)}))}(e,i),n[e.name.value]=i}})),e.exports=t,e.exports.mergeRequestSidebarDetails=function(e,i){var t={kind:e.kind,definitions:[a(e,i)]};e.hasOwnProperty("loc")&&(t.loc=e.loc);var r=n[i]||new Set,s=new Set,o=new Set;for(r.forEach((function(e){o.add(e)}));o.size>0;){var d=o;o=new Set,d.forEach((function(e){s.has(e)||(s.add(e),(n[e]||new Set).forEach((function(e){o.add(e)})))}))}return s.forEach((function(i){var n=a(e,i);n&&t.definitions.push(n)})),t}(t,"mergeRequestSidebarDetails")},LkRf:function(e,i,t){"use strict";t.d(i,"a",(function(){return n})),t.d(i,"b",(function(){return a})),t.d(i,"c",(function(){return r})),t.d(i,"d",(function(){return s})),t.d(i,"e",(function(){return o})),t.d(i,"f",(function(){return d})),t.d(i,"g",(function(){return u})),t.d(i,"h",(function(){return l})),t.d(i,"i",(function(){return c})),t.d(i,"j",(function(){return m})),t.d(i,"k",(function(){return f})),t.d(i,"l",(function(){return v})),t.d(i,"m",(function(){return h})),t.d(i,"n",(function(){return p})),t.d(i,"o",(function(){return g})),t.d(i,"p",(function(){return k})),t.d(i,"q",(function(){return b})),t.d(i,"r",(function(){return S}));const n=3,a="Ci::Runner",r="CustomerRelations::Contact",s="Discussion",o="Epic",d="Group",u="Issue",l="Iteration",c="Iterations::Cadence",m="MergeRequest",f="Milestone",v="Note",h="Packages::Package",p="Project",g="DastScannerProfile",k="DastSiteProfile",b="User",S="Vulnerability"},"MuZ/":function(e,i){var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"getIssueHealthStatus"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"fullPath"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"iid"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"project"},arguments:[{kind:"Argument",name:{kind:"Name",value:"fullPath"},value:{kind:"Variable",name:{kind:"Name",value:"fullPath"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"issue"},arguments:[{kind:"Argument",name:{kind:"Name",value:"iid"},value:{kind:"Variable",name:{kind:"Name",value:"iid"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"healthStatus"},arguments:[],directives:[]}]}}]}}]}}],loc:{start:0,end:163}};t.loc.source={body:"query getIssueHealthStatus($fullPath: ID!, $iid: String!) {\n  project(fullPath: $fullPath) {\n    id\n    issue(iid: $iid) {\n      id\n      healthStatus\n    }\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};var n={};function a(e,i){for(var t=0;t<e.definitions.length;t++){var n=e.definitions[t];if(n.name&&n.name.value==i)return n}}t.definitions.forEach((function(e){if(e.name){var i=new Set;!function e(i,t){if("FragmentSpread"===i.kind)t.add(i.name.value);else if("VariableDefinition"===i.kind){var n=i.type;"NamedType"===n.kind&&t.add(n.name.value)}i.selectionSet&&i.selectionSet.selections.forEach((function(i){e(i,t)})),i.variableDefinitions&&i.variableDefinitions.forEach((function(i){e(i,t)})),i.definitions&&i.definitions.forEach((function(i){e(i,t)}))}(e,i),n[e.name.value]=i}})),e.exports=t,e.exports.getIssueHealthStatus=function(e,i){var t={kind:e.kind,definitions:[a(e,i)]};e.hasOwnProperty("loc")&&(t.loc=e.loc);var r=n[i]||new Set,s=new Set,o=new Set;for(r.forEach((function(e){o.add(e)}));o.size>0;){var d=o;o=new Set,d.forEach((function(e){s.has(e)||(s.add(e),(n[e]||new Set).forEach((function(e){o.add(e)})))}))}return s.forEach((function(i){var n=a(e,i);n&&t.definitions.push(n)})),t}(t,"getIssueHealthStatus")},P8Ze:function(e,i,t){"use strict";t.d(i,"a",(function(){return y}));var n=t("AUIv"),a=t("teVv"),r=t("t9l/"),s=t("LuMo"),o=t("yYHy"),d=t("MuZ/"),u=t.n(d),l=t("LkRf"),c=t("+lve"),m=t("voi4"),f=t("mphk"),v=t("mpX+"),h=t.n(v),p=t("E8Hc"),g=t.n(p),k=t("p6c7"),b=t.n(k);const S={merge_request:g.a,issue:u.a},N=Object(m.default)({},{fetchPolicy:m.fetchPolicies.NO_CACHE});class w{constructor(e){return w.singleton||(this.endpoint=e.endpoint,this.moveIssueEndpoint=e.moveIssueEndpoint,this.projectsAutocompleteEndpoint=e.projectsAutocompleteEndpoint,this.fullPath=e.fullPath,this.iid=e.iid,this.issuableType=e.issuableType,w.singleton=this),w.singleton}get(){return Promise.all([f.a.get(this.endpoint),N.query({query:this.sidebarDetailsQuery(),variables:{fullPath:this.fullPath,iid:this.iid.toString()}})])}sidebarDetailsQuery(){return S[this.issuableType]}update(e,i){return f.a.put(this.endpoint,{[e]:i})}updateWithGraphQl(e,i){return N.mutate({mutation:e,variables:{...i,projectPath:this.fullPath,iid:this.iid.toString()}})}getProjectsAutocomplete(e){return f.a.get(this.projectsAutocompleteEndpoint,{params:{search:e}})}moveIssue(e){return f.a.post(this.moveIssueEndpoint,{move_to_project_id:e})}requestReview(e){return N.mutate({mutation:h.a,variables:{userId:Object(c.c)(l.q,`${e}`),projectPath:this.fullPath,iid:this.iid.toString()}})}toggleAttentionRequested(e){return N.mutate({mutation:b.a,variables:{userId:Object(c.c)(l.q,`${e}`),projectPath:this.fullPath,iid:this.iid.toString()}})}}class y{constructor(e){return y.singleton||this.initSingleton(e),y.singleton}initSingleton(e){this.store=new n.a(e),this.service=new w({endpoint:e.endpoint,moveIssueEndpoint:e.moveIssueEndpoint,projectsAutocompleteEndpoint:e.projectsAutocompleteEndpoint,fullPath:e.fullPath,iid:e.iid,issuableType:e.issuableType}),y.singleton=this}assignYourself(){this.store.addAssignee(this.store.currentUser)}async saveAssignees(e){const i=this.store.assignees.map((function(e){return e.id})),t={assignee_ids:0===i.length?[0]:i};try{const i=await this.service.update(e,t);return this.store.overwrite("assignees",i.data.assignees),i.data.reviewers&&this.store.overwrite("reviewers",i.data.reviewers),Promise.resolve(i)}catch(e){return Promise.reject(e)}}async saveReviewers(e){const i=this.store.reviewers.map((function(e){return e.id})),t={reviewer_ids:0===i.length?[0]:i};try{const i=await this.service.update(e,t);return this.store.overwrite("reviewers",i.data.reviewers),this.store.overwrite("assignees",i.data.assignees),Promise.resolve(i)}catch(e){return Promise.reject()}}requestReview(e){var i=this;let{userId:t,callback:n}=e;return this.service.requestReview(t).then((function(){i.store.updateReviewer(t,"reviewed"),Object(s.a)(Object(r.a)("Requested review")),n(t,!0)})).catch((function(){return n(t,!1)}))}removeCurrentUserAttentionRequested(){const e=gon.current_user_id,i=this.store.findReviewer({id:e}),t=this.store.findAssignee({id:e});(null!=i&&i.attention_requested||null!=t&&t.attention_requested)&&(this.store.updateReviewer(e,"attention_requested"),this.store.updateAssignee(e,"attention_requested"))}async toggleAttentionRequested(e,i){var t=this;let{user:n,callback:o}=i;try{const i="reviewer"===e?this.store.findReviewer(n):this.store.findAssignee(n);if(await this.service.toggleAttentionRequested(n.id),i.attention_requested)Object(s.a)(Object(r.h)(Object(r.a)("Removed attention request from @%{username}"),{username:n.username}));else{gon.current_user_id!==n.id&&this.removeCurrentUserAttentionRequested(),Object(s.a)(Object(r.h)(Object(r.a)("Requested attention from @%{username}"),{username:n.username}))}this.store.updateReviewer(n.id,"attention_requested"),this.store.updateAssignee(n.id,"attention_requested"),o()}catch(i){o(),Object(a.f)({message:Object(r.h)(Object(r.a)("Updating the attention request for %{username} failed."),{username:n.username}),error:i,captureError:!0,actionConfig:{title:Object(r.a)("Try again"),clickHandler:function(){return t.toggleAttentionRequired(e,{user:n,callback:o})}}})}}setMoveToProjectId(e){this.store.setMoveToProjectId(e)}fetch(){var e=this;return this.service.get().then((function(i){let[t,n]=i;e.processFetchedData(t.data,n.data)})).catch((function(){return Object(a.f)({message:Object(r.a)("Error occurred when fetching sidebar data")})}))}processFetchedData(e){this.store.setAssigneeData(e),this.store.setReviewerData(e),this.store.setTimeTrackingData(e)}fetchAutocompleteProjects(e){var i=this;return this.service.getProjectsAutocomplete(e).then((function(e){let{data:t}=e;return i.store.setAutocompleteProjects(t),i.store.autocompleteProjects}))}moveIssue(){return this.service.moveIssue(this.store.moveToProjectId).then((function(e){let{data:i}=e;window.location.pathname!==i.web_url&&Object(o.N)(i.web_url)}))}}},"mpX+":function(e,i){var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"mergeRequestRequestRereview"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"projectPath"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"iid"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"userId"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"mergeRequestReviewerRereview"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"ObjectValue",fields:[{kind:"ObjectField",name:{kind:"Name",value:"projectPath"},value:{kind:"Variable",name:{kind:"Name",value:"projectPath"}}},{kind:"ObjectField",name:{kind:"Name",value:"iid"},value:{kind:"Variable",name:{kind:"Name",value:"iid"}}},{kind:"ObjectField",name:{kind:"Name",value:"userId"},value:{kind:"Variable",name:{kind:"Name",value:"userId"}}}]}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"errors"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:203}};t.loc.source={body:"mutation mergeRequestRequestRereview($projectPath: ID!, $iid: String!, $userId: ID!) {\n  mergeRequestReviewerRereview(input: { projectPath: $projectPath, iid: $iid, userId: $userId }) {\n    errors\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};var n={};function a(e,i){for(var t=0;t<e.definitions.length;t++){var n=e.definitions[t];if(n.name&&n.name.value==i)return n}}t.definitions.forEach((function(e){if(e.name){var i=new Set;!function e(i,t){if("FragmentSpread"===i.kind)t.add(i.name.value);else if("VariableDefinition"===i.kind){var n=i.type;"NamedType"===n.kind&&t.add(n.name.value)}i.selectionSet&&i.selectionSet.selections.forEach((function(i){e(i,t)})),i.variableDefinitions&&i.variableDefinitions.forEach((function(i){e(i,t)})),i.definitions&&i.definitions.forEach((function(i){e(i,t)}))}(e,i),n[e.name.value]=i}})),e.exports=t,e.exports.mergeRequestRequestRereview=function(e,i){var t={kind:e.kind,definitions:[a(e,i)]};e.hasOwnProperty("loc")&&(t.loc=e.loc);var r=n[i]||new Set,s=new Set,o=new Set;for(r.forEach((function(e){o.add(e)}));o.size>0;){var d=o;o=new Set,d.forEach((function(e){s.has(e)||(s.add(e),(n[e]||new Set).forEach((function(e){o.add(e)})))}))}return s.forEach((function(i){var n=a(e,i);n&&t.definitions.push(n)})),t}(t,"mergeRequestRequestRereview")},p6c7:function(e,i){var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"mergeRequestToggleAttentionRequested"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"projectPath"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"iid"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"userId"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"mergeRequestToggleAttentionRequested"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"ObjectValue",fields:[{kind:"ObjectField",name:{kind:"Name",value:"projectPath"},value:{kind:"Variable",name:{kind:"Name",value:"projectPath"}}},{kind:"ObjectField",name:{kind:"Name",value:"iid"},value:{kind:"Variable",name:{kind:"Name",value:"iid"}}},{kind:"ObjectField",name:{kind:"Name",value:"userId"},value:{kind:"Variable",name:{kind:"Name",value:"userId"}}}]}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"errors"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:228}};t.loc.source={body:"mutation mergeRequestToggleAttentionRequested($projectPath: ID!, $iid: String!, $userId: ID!) {\n  mergeRequestToggleAttentionRequested(\n    input: { projectPath: $projectPath, iid: $iid, userId: $userId }\n  ) {\n    errors\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};var n={};function a(e,i){for(var t=0;t<e.definitions.length;t++){var n=e.definitions[t];if(n.name&&n.name.value==i)return n}}t.definitions.forEach((function(e){if(e.name){var i=new Set;!function e(i,t){if("FragmentSpread"===i.kind)t.add(i.name.value);else if("VariableDefinition"===i.kind){var n=i.type;"NamedType"===n.kind&&t.add(n.name.value)}i.selectionSet&&i.selectionSet.selections.forEach((function(i){e(i,t)})),i.variableDefinitions&&i.variableDefinitions.forEach((function(i){e(i,t)})),i.definitions&&i.definitions.forEach((function(i){e(i,t)}))}(e,i),n[e.name.value]=i}})),e.exports=t,e.exports.mergeRequestToggleAttentionRequested=function(e,i){var t={kind:e.kind,definitions:[a(e,i)]};e.hasOwnProperty("loc")&&(t.loc=e.loc);var r=n[i]||new Set,s=new Set,o=new Set;for(r.forEach((function(e){o.add(e)}));o.size>0;){var d=o;o=new Set,d.forEach((function(e){s.has(e)||(s.add(e),(n[e]||new Set).forEach((function(e){o.add(e)})))}))}return s.forEach((function(i){var n=a(e,i);n&&t.definitions.push(n)})),t}(t,"mergeRequestToggleAttentionRequested")}}]);
//# sourceMappingURL=commons-initGFMInput-pages.admin.topics.edit-pages.admin.topics.new-pages.groups.epics.new-pages.gro-54fa9e79.cae3a762.chunk.js.map