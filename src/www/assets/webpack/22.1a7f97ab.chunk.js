(this.webpackJsonp=this.webpackJsonp||[]).push([[22],{"+FWW":function(e,i){var n={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"updateIssueHealthStatus"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"projectPath"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"iid"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"healthStatus"}},type:{kind:"NamedType",name:{kind:"Name",value:"HealthStatus"}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"updateIssue"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"ObjectValue",fields:[{kind:"ObjectField",name:{kind:"Name",value:"projectPath"},value:{kind:"Variable",name:{kind:"Name",value:"projectPath"}}},{kind:"ObjectField",name:{kind:"Name",value:"iid"},value:{kind:"Variable",name:{kind:"Name",value:"iid"}}},{kind:"ObjectField",name:{kind:"Name",value:"healthStatus"},value:{kind:"Variable",name:{kind:"Name",value:"healthStatus"}}}]}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"issuable"},name:{kind:"Name",value:"issue"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"healthStatus"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"errors"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:265}};n.loc.source={body:"mutation updateIssueHealthStatus($projectPath: ID!, $iid: String!, $healthStatus: HealthStatus) {\n  updateIssue(input: { projectPath: $projectPath, iid: $iid, healthStatus: $healthStatus }) {\n    issuable: issue {\n      id\n      healthStatus\n    }\n    errors\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};var a={};function t(e,i){for(var n=0;n<e.definitions.length;n++){var a=e.definitions[n];if(a.name&&a.name.value==i)return a}}n.definitions.forEach((function(e){if(e.name){var i=new Set;!function e(i,n){if("FragmentSpread"===i.kind)n.add(i.name.value);else if("VariableDefinition"===i.kind){var a=i.type;"NamedType"===a.kind&&n.add(a.name.value)}i.selectionSet&&i.selectionSet.selections.forEach((function(i){e(i,n)})),i.variableDefinitions&&i.variableDefinitions.forEach((function(i){e(i,n)})),i.definitions&&i.definitions.forEach((function(i){e(i,n)}))}(e,i),a[e.name.value]=i}})),e.exports=n,e.exports.updateIssueHealthStatus=function(e,i){var n={kind:e.kind,definitions:[t(e,i)]};e.hasOwnProperty("loc")&&(n.loc=e.loc);var d=a[i]||new Set,l=new Set,r=new Set;for(d.forEach((function(e){r.add(e)}));r.size>0;){var o=r;r=new Set,o.forEach((function(e){l.has(e)||(l.add(e),(a[e]||new Set).forEach((function(e){r.add(e)})))}))}return l.forEach((function(i){var a=t(e,i);a&&n.definitions.push(a)})),n}(n,"updateIssueHealthStatus")},"1RJB":function(e,i,n){var a={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"projectEscalationPolicies"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"fullPath"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"title"}},type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"workspace"},name:{kind:"Name",value:"project"},arguments:[{kind:"Argument",name:{kind:"Name",value:"fullPath"},value:{kind:"Variable",name:{kind:"Name",value:"fullPath"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"__typename"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",alias:{kind:"Name",value:"attributes"},name:{kind:"Name",value:"incidentManagementEscalationPolicies"},arguments:[{kind:"Argument",name:{kind:"Name",value:"name"},value:{kind:"Variable",name:{kind:"Name",value:"title"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"nodes"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"EscalationPolicyFragment"},directives:[]},{kind:"Field",name:{kind:"Name",value:"__typename"},arguments:[],directives:[]}]}}]}}]}}]}}],loc:{start:0,end:338}};a.loc.source={body:'#import "./escalation_policy.fragment.graphql"\n\nquery projectEscalationPolicies($fullPath: ID!, $title: String) {\n  workspace: project(fullPath: $fullPath) {\n    __typename\n    id\n    attributes: incidentManagementEscalationPolicies(name: $title) {\n      nodes {\n        ...EscalationPolicyFragment\n        __typename\n      }\n    }\n  }\n}\n',name:"GraphQL request",locationOffset:{line:1,column:1}};var t={};a.definitions=a.definitions.concat(n("vBMq").definitions.filter((function(e){if("FragmentDefinition"!==e.kind)return!0;var i=e.name.value;return!t[i]&&(t[i]=!0,!0)})));var d={};function l(e,i){for(var n=0;n<e.definitions.length;n++){var a=e.definitions[n];if(a.name&&a.name.value==i)return a}}a.definitions.forEach((function(e){if(e.name){var i=new Set;!function e(i,n){if("FragmentSpread"===i.kind)n.add(i.name.value);else if("VariableDefinition"===i.kind){var a=i.type;"NamedType"===a.kind&&n.add(a.name.value)}i.selectionSet&&i.selectionSet.selections.forEach((function(i){e(i,n)})),i.variableDefinitions&&i.variableDefinitions.forEach((function(i){e(i,n)})),i.definitions&&i.definitions.forEach((function(i){e(i,n)}))}(e,i),d[e.name.value]=i}})),e.exports=a,e.exports.projectEscalationPolicies=function(e,i){var n={kind:e.kind,definitions:[l(e,i)]};e.hasOwnProperty("loc")&&(n.loc=e.loc);var a=d[i]||new Set,t=new Set,r=new Set;for(a.forEach((function(e){r.add(e)}));r.size>0;){var o=r;r=new Set,o.forEach((function(e){t.has(e)||(t.add(e),(d[e]||new Set).forEach((function(e){r.add(e)})))}))}return t.forEach((function(i){var a=l(e,i);a&&n.definitions.push(a)})),n}(a,"projectEscalationPolicies")},"30jG":function(e,i,n){var a={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"projectIssueEpic"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"fullPath"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"iid"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"workspace"},name:{kind:"Name",value:"project"},arguments:[{kind:"Argument",name:{kind:"Name",value:"fullPath"},value:{kind:"Variable",name:{kind:"Name",value:"fullPath"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"__typename"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",alias:{kind:"Name",value:"issuable"},name:{kind:"Name",value:"issue"},arguments:[{kind:"Argument",name:{kind:"Name",value:"iid"},value:{kind:"Variable",name:{kind:"Name",value:"iid"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"__typename"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",alias:{kind:"Name",value:"attribute"},name:{kind:"Name",value:"epic"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"EpicFragment"},directives:[]}]}}]}}]}}]}}],loc:{start:0,end:284}};a.loc.source={body:'#import "./epic.fragment.graphql"\n\nquery projectIssueEpic($fullPath: ID!, $iid: String!) {\n  workspace: project(fullPath: $fullPath) {\n    __typename\n    id\n    issuable: issue(iid: $iid) {\n      __typename\n      id\n      attribute: epic {\n        ...EpicFragment\n      }\n    }\n  }\n}\n',name:"GraphQL request",locationOffset:{line:1,column:1}};var t={};a.definitions=a.definitions.concat(n("kyXN").definitions.filter((function(e){if("FragmentDefinition"!==e.kind)return!0;var i=e.name.value;return!t[i]&&(t[i]=!0,!0)})));var d={};function l(e,i){for(var n=0;n<e.definitions.length;n++){var a=e.definitions[n];if(a.name&&a.name.value==i)return a}}a.definitions.forEach((function(e){if(e.name){var i=new Set;!function e(i,n){if("FragmentSpread"===i.kind)n.add(i.name.value);else if("VariableDefinition"===i.kind){var a=i.type;"NamedType"===a.kind&&n.add(a.name.value)}i.selectionSet&&i.selectionSet.selections.forEach((function(i){e(i,n)})),i.variableDefinitions&&i.variableDefinitions.forEach((function(i){e(i,n)})),i.definitions&&i.definitions.forEach((function(i){e(i,n)}))}(e,i),d[e.name.value]=i}})),e.exports=a,e.exports.projectIssueEpic=function(e,i){var n={kind:e.kind,definitions:[l(e,i)]};e.hasOwnProperty("loc")&&(n.loc=e.loc);var a=d[i]||new Set,t=new Set,r=new Set;for(a.forEach((function(e){r.add(e)}));r.size>0;){var o=r;r=new Set,o.forEach((function(e){t.has(e)||(t.add(e),(d[e]||new Set).forEach((function(e){r.add(e)})))}))}return t.forEach((function(i){var a=l(e,i);a&&n.definitions.push(a)})),n}(a,"projectIssueEpic")},"9yub":function(e,i){var n={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"issueWeight"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"fullPath"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"iid"}},type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"workspace"},name:{kind:"Name",value:"project"},arguments:[{kind:"Argument",name:{kind:"Name",value:"fullPath"},value:{kind:"Variable",name:{kind:"Name",value:"fullPath"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"__typename"},arguments:[],directives:[]},{kind:"Field",alias:{kind:"Name",value:"issuable"},name:{kind:"Name",value:"issue"},arguments:[{kind:"Argument",name:{kind:"Name",value:"iid"},value:{kind:"Variable",name:{kind:"Name",value:"iid"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"__typename"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"weight"},arguments:[],directives:[]}]}}]}}]}}],loc:{start:0,end:200}};n.loc.source={body:"query issueWeight($fullPath: ID!, $iid: String) {\n  workspace: project(fullPath: $fullPath) {\n    id\n    __typename\n    issuable: issue(iid: $iid) {\n      __typename\n      id\n      weight\n    }\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};var a={};function t(e,i){for(var n=0;n<e.definitions.length;n++){var a=e.definitions[n];if(a.name&&a.name.value==i)return a}}n.definitions.forEach((function(e){if(e.name){var i=new Set;!function e(i,n){if("FragmentSpread"===i.kind)n.add(i.name.value);else if("VariableDefinition"===i.kind){var a=i.type;"NamedType"===a.kind&&n.add(a.name.value)}i.selectionSet&&i.selectionSet.selections.forEach((function(i){e(i,n)})),i.variableDefinitions&&i.variableDefinitions.forEach((function(i){e(i,n)})),i.definitions&&i.definitions.forEach((function(i){e(i,n)}))}(e,i),a[e.name.value]=i}})),e.exports=n,e.exports.issueWeight=function(e,i){var n={kind:e.kind,definitions:[t(e,i)]};e.hasOwnProperty("loc")&&(n.loc=e.loc);var d=a[i]||new Set,l=new Set,r=new Set;for(d.forEach((function(e){r.add(e)}));r.size>0;){var o=r;r=new Set,o.forEach((function(e){l.has(e)||(l.add(e),(a[e]||new Set).forEach((function(e){r.add(e)})))}))}return l.forEach((function(i){var a=t(e,i);a&&n.definitions.push(a)})),n}(n,"issueWeight")},Aphk:function(e,i){var n={kind:"Document",definitions:[{kind:"FragmentDefinition",name:{kind:"Name",value:"IterationFragment"},typeCondition:{kind:"NamedType",name:{kind:"Name",value:"Iteration"}},directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"title"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"startDate"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"dueDate"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"webUrl"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"iterationCadence"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"title"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:130}};n.loc.source={body:"fragment IterationFragment on Iteration {\n  id\n  title\n  startDate\n  dueDate\n  webUrl\n  iterationCadence {\n    id\n    title\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};e.exports=n},ETYA:function(e,i,n){var a={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"issueIterationsAliased"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"fullPath"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"title"}},type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"state"}},type:{kind:"NamedType",name:{kind:"Name",value:"IterationState"}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"workspace"},name:{kind:"Name",value:"group"},arguments:[{kind:"Argument",name:{kind:"Name",value:"fullPath"},value:{kind:"Variable",name:{kind:"Name",value:"fullPath"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"__typename"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",alias:{kind:"Name",value:"attributes"},name:{kind:"Name",value:"iterations"},arguments:[{kind:"Argument",name:{kind:"Name",value:"title"},value:{kind:"Variable",name:{kind:"Name",value:"title"}}},{kind:"Argument",name:{kind:"Name",value:"state"},value:{kind:"Variable",name:{kind:"Name",value:"state"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"nodes"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"IterationFragment"},directives:[]},{kind:"Field",name:{kind:"Name",value:"state"},arguments:[],directives:[]}]}}]}}]}}]}}],loc:{start:0,end:327}};a.loc.source={body:'#import "./iteration.fragment.graphql"\n\nquery issueIterationsAliased($fullPath: ID!, $title: String, $state: IterationState) {\n  workspace: group(fullPath: $fullPath) {\n    __typename\n    id\n    attributes: iterations(title: $title, state: $state) {\n      nodes {\n        ...IterationFragment\n        state\n      }\n    }\n  }\n}\n',name:"GraphQL request",locationOffset:{line:1,column:1}};var t={};a.definitions=a.definitions.concat(n("Aphk").definitions.filter((function(e){if("FragmentDefinition"!==e.kind)return!0;var i=e.name.value;return!t[i]&&(t[i]=!0,!0)})));var d={};function l(e,i){for(var n=0;n<e.definitions.length;n++){var a=e.definitions[n];if(a.name&&a.name.value==i)return a}}a.definitions.forEach((function(e){if(e.name){var i=new Set;!function e(i,n){if("FragmentSpread"===i.kind)n.add(i.name.value);else if("VariableDefinition"===i.kind){var a=i.type;"NamedType"===a.kind&&n.add(a.name.value)}i.selectionSet&&i.selectionSet.selections.forEach((function(i){e(i,n)})),i.variableDefinitions&&i.variableDefinitions.forEach((function(i){e(i,n)})),i.definitions&&i.definitions.forEach((function(i){e(i,n)}))}(e,i),d[e.name.value]=i}})),e.exports=a,e.exports.issueIterationsAliased=function(e,i){var n={kind:e.kind,definitions:[l(e,i)]};e.hasOwnProperty("loc")&&(n.loc=e.loc);var a=d[i]||new Set,t=new Set,r=new Set;for(a.forEach((function(e){r.add(e)}));r.size>0;){var o=r;r=new Set,o.forEach((function(e){t.has(e)||(t.add(e),(d[e]||new Set).forEach((function(e){r.add(e)})))}))}return t.forEach((function(i){var a=l(e,i);a&&n.definitions.push(a)})),n}(a,"issueIterationsAliased")},Eb4Q:function(e,i){var n={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"projectIssueEpicMutation"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"fullPath"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"iid"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"attributeId"}},type:{kind:"NamedType",name:{kind:"Name",value:"EpicID"}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"issuableSetAttribute"},name:{kind:"Name",value:"issueSetEpic"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"ObjectValue",fields:[{kind:"ObjectField",name:{kind:"Name",value:"projectPath"},value:{kind:"Variable",name:{kind:"Name",value:"fullPath"}}},{kind:"ObjectField",name:{kind:"Name",value:"iid"},value:{kind:"Variable",name:{kind:"Name",value:"iid"}}},{kind:"ObjectField",name:{kind:"Name",value:"epicId"},value:{kind:"Variable",name:{kind:"Name",value:"attributeId"}}}]}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"__typename"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"errors"},arguments:[],directives:[]},{kind:"Field",alias:{kind:"Name",value:"issuable"},name:{kind:"Name",value:"issue"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"__typename"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",alias:{kind:"Name",value:"attribute"},name:{kind:"Name",value:"epic"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"title"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"state"},arguments:[],directives:[]}]}}]}}]}}]}}],loc:{start:0,end:361}};n.loc.source={body:"mutation projectIssueEpicMutation($fullPath: ID!, $iid: String!, $attributeId: EpicID) {\n  issuableSetAttribute: issueSetEpic(\n    input: { projectPath: $fullPath, iid: $iid, epicId: $attributeId }\n  ) {\n    __typename\n    errors\n    issuable: issue {\n      __typename\n      id\n      attribute: epic {\n        title\n        id\n        state\n      }\n    }\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};var a={};function t(e,i){for(var n=0;n<e.definitions.length;n++){var a=e.definitions[n];if(a.name&&a.name.value==i)return a}}n.definitions.forEach((function(e){if(e.name){var i=new Set;!function e(i,n){if("FragmentSpread"===i.kind)n.add(i.name.value);else if("VariableDefinition"===i.kind){var a=i.type;"NamedType"===a.kind&&n.add(a.name.value)}i.selectionSet&&i.selectionSet.selections.forEach((function(i){e(i,n)})),i.variableDefinitions&&i.variableDefinitions.forEach((function(i){e(i,n)})),i.definitions&&i.definitions.forEach((function(i){e(i,n)}))}(e,i),a[e.name.value]=i}})),e.exports=n,e.exports.projectIssueEpicMutation=function(e,i){var n={kind:e.kind,definitions:[t(e,i)]};e.hasOwnProperty("loc")&&(n.loc=e.loc);var d=a[i]||new Set,l=new Set,r=new Set;for(d.forEach((function(e){r.add(e)}));r.size>0;){var o=r;r=new Set,o.forEach((function(e){l.has(e)||(l.add(e),(a[e]||new Set).forEach((function(e){r.add(e)})))}))}return l.forEach((function(i){var a=t(e,i);a&&n.definitions.push(a)})),n}(n,"projectIssueEpicMutation")},LGLi:function(e,i){var n={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"issueHealthStatus"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"fullPath"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"iid"}},type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"workspace"},name:{kind:"Name",value:"project"},arguments:[{kind:"Argument",name:{kind:"Name",value:"fullPath"},value:{kind:"Variable",name:{kind:"Name",value:"fullPath"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"__typename"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",alias:{kind:"Name",value:"issuable"},name:{kind:"Name",value:"issue"},arguments:[{kind:"Argument",name:{kind:"Name",value:"iid"},value:{kind:"Variable",name:{kind:"Name",value:"iid"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"__typename"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"healthStatus"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"state"},arguments:[],directives:[]}]}}]}}]}}],loc:{start:0,end:224}};n.loc.source={body:"query issueHealthStatus($fullPath: ID!, $iid: String) {\n  workspace: project(fullPath: $fullPath) {\n    __typename\n    id\n    issuable: issue(iid: $iid) {\n      __typename\n      id\n      healthStatus\n      state\n    }\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};var a={};function t(e,i){for(var n=0;n<e.definitions.length;n++){var a=e.definitions[n];if(a.name&&a.name.value==i)return a}}n.definitions.forEach((function(e){if(e.name){var i=new Set;!function e(i,n){if("FragmentSpread"===i.kind)n.add(i.name.value);else if("VariableDefinition"===i.kind){var a=i.type;"NamedType"===a.kind&&n.add(a.name.value)}i.selectionSet&&i.selectionSet.selections.forEach((function(i){e(i,n)})),i.variableDefinitions&&i.variableDefinitions.forEach((function(i){e(i,n)})),i.definitions&&i.definitions.forEach((function(i){e(i,n)}))}(e,i),a[e.name.value]=i}})),e.exports=n,e.exports.issueHealthStatus=function(e,i){var n={kind:e.kind,definitions:[t(e,i)]};e.hasOwnProperty("loc")&&(n.loc=e.loc);var d=a[i]||new Set,l=new Set,r=new Set;for(d.forEach((function(e){r.add(e)}));r.size>0;){var o=r;r=new Set,o.forEach((function(e){l.has(e)||(l.add(e),(a[e]||new Set).forEach((function(e){r.add(e)})))}))}return l.forEach((function(i){var a=t(e,i);a&&n.definitions.push(a)})),n}(n,"issueHealthStatus")},"Tq6+":function(e,i,n){var a={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"issueEpics"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"fullPath"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"title"}},type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"state"}},type:{kind:"NamedType",name:{kind:"Name",value:"EpicState"}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"in"}},type:{kind:"ListType",type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"IssuableSearchableField"}}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"iidStartsWith"}},type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"workspace"},name:{kind:"Name",value:"group"},arguments:[{kind:"Argument",name:{kind:"Name",value:"fullPath"},value:{kind:"Variable",name:{kind:"Name",value:"fullPath"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",alias:{kind:"Name",value:"attributes"},name:{kind:"Name",value:"epics"},arguments:[{kind:"Argument",name:{kind:"Name",value:"search"},value:{kind:"Variable",name:{kind:"Name",value:"title"}}},{kind:"Argument",name:{kind:"Name",value:"in"},value:{kind:"Variable",name:{kind:"Name",value:"in"}}},{kind:"Argument",name:{kind:"Name",value:"state"},value:{kind:"Variable",name:{kind:"Name",value:"state"}}},{kind:"Argument",name:{kind:"Name",value:"includeAncestorGroups"},value:{kind:"BooleanValue",value:!0}},{kind:"Argument",name:{kind:"Name",value:"includeDescendantGroups"},value:{kind:"BooleanValue",value:!1}},{kind:"Argument",name:{kind:"Name",value:"iidStartsWith"},value:{kind:"Variable",name:{kind:"Name",value:"iidStartsWith"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"nodes"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"EpicFragment"},directives:[]},{kind:"Field",name:{kind:"Name",value:"state"},arguments:[],directives:[]}]}}]}}]}}]}}],loc:{start:0,end:484}};a.loc.source={body:'#import "./epic.fragment.graphql"\n\nquery issueEpics(\n  $fullPath: ID!\n  $title: String\n  $state: EpicState\n  $in: [IssuableSearchableField!]\n  $iidStartsWith: String\n) {\n  workspace: group(fullPath: $fullPath) {\n    id\n    attributes: epics(\n      search: $title\n      in: $in\n      state: $state\n      includeAncestorGroups: true\n      includeDescendantGroups: false\n      iidStartsWith: $iidStartsWith\n    ) {\n      nodes {\n        ...EpicFragment\n        state\n      }\n    }\n  }\n}\n',name:"GraphQL request",locationOffset:{line:1,column:1}};var t={};a.definitions=a.definitions.concat(n("kyXN").definitions.filter((function(e){if("FragmentDefinition"!==e.kind)return!0;var i=e.name.value;return!t[i]&&(t[i]=!0,!0)})));var d={};function l(e,i){for(var n=0;n<e.definitions.length;n++){var a=e.definitions[n];if(a.name&&a.name.value==i)return a}}a.definitions.forEach((function(e){if(e.name){var i=new Set;!function e(i,n){if("FragmentSpread"===i.kind)n.add(i.name.value);else if("VariableDefinition"===i.kind){var a=i.type;"NamedType"===a.kind&&n.add(a.name.value)}i.selectionSet&&i.selectionSet.selections.forEach((function(i){e(i,n)})),i.variableDefinitions&&i.variableDefinitions.forEach((function(i){e(i,n)})),i.definitions&&i.definitions.forEach((function(i){e(i,n)}))}(e,i),d[e.name.value]=i}})),e.exports=a,e.exports.issueEpics=function(e,i){var n={kind:e.kind,definitions:[l(e,i)]};e.hasOwnProperty("loc")&&(n.loc=e.loc);var a=d[i]||new Set,t=new Set,r=new Set;for(a.forEach((function(e){r.add(e)}));r.size>0;){var o=r;r=new Set,o.forEach((function(e){t.has(e)||(t.add(e),(d[e]||new Set).forEach((function(e){r.add(e)})))}))}return t.forEach((function(i){var a=l(e,i);a&&n.definitions.push(a)})),n}(a,"issueEpics")},UBgU:function(e,i,n){var a={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"issueEscalationPolicy"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"fullPath"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"iid"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"workspace"},name:{kind:"Name",value:"project"},arguments:[{kind:"Argument",name:{kind:"Name",value:"fullPath"},value:{kind:"Variable",name:{kind:"Name",value:"fullPath"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"__typename"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",alias:{kind:"Name",value:"issuable"},name:{kind:"Name",value:"issue"},arguments:[{kind:"Argument",name:{kind:"Name",value:"iid"},value:{kind:"Variable",name:{kind:"Name",value:"iid"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"__typename"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",alias:{kind:"Name",value:"attribute"},name:{kind:"Name",value:"escalationPolicy"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"EscalationPolicyFragment"},directives:[]}]}}]}}]}}]}}],loc:{start:0,end:326}};a.loc.source={body:'#import "./escalation_policy.fragment.graphql"\n\nquery issueEscalationPolicy($fullPath: ID!, $iid: String!) {\n  workspace: project(fullPath: $fullPath) {\n    __typename\n    id\n    issuable: issue(iid: $iid) {\n      __typename\n      id\n      attribute: escalationPolicy {\n        ...EscalationPolicyFragment\n      }\n    }\n  }\n}\n',name:"GraphQL request",locationOffset:{line:1,column:1}};var t={};a.definitions=a.definitions.concat(n("vBMq").definitions.filter((function(e){if("FragmentDefinition"!==e.kind)return!0;var i=e.name.value;return!t[i]&&(t[i]=!0,!0)})));var d={};function l(e,i){for(var n=0;n<e.definitions.length;n++){var a=e.definitions[n];if(a.name&&a.name.value==i)return a}}a.definitions.forEach((function(e){if(e.name){var i=new Set;!function e(i,n){if("FragmentSpread"===i.kind)n.add(i.name.value);else if("VariableDefinition"===i.kind){var a=i.type;"NamedType"===a.kind&&n.add(a.name.value)}i.selectionSet&&i.selectionSet.selections.forEach((function(i){e(i,n)})),i.variableDefinitions&&i.variableDefinitions.forEach((function(i){e(i,n)})),i.definitions&&i.definitions.forEach((function(i){e(i,n)}))}(e,i),d[e.name.value]=i}})),e.exports=a,e.exports.issueEscalationPolicy=function(e,i){var n={kind:e.kind,definitions:[l(e,i)]};e.hasOwnProperty("loc")&&(n.loc=e.loc);var a=d[i]||new Set,t=new Set,r=new Set;for(a.forEach((function(e){r.add(e)}));r.size>0;){var o=r;r=new Set,o.forEach((function(e){t.has(e)||(t.add(e),(d[e]||new Set).forEach((function(e){r.add(e)})))}))}return t.forEach((function(i){var a=l(e,i);a&&n.definitions.push(a)})),n}(a,"issueEscalationPolicy")},VOyV:function(e,i){var n={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"issueSetWeight"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"input"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"IssueSetWeightInput"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"issuableSetWeight"},name:{kind:"Name",value:"issueSetWeight"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"Variable",name:{kind:"Name",value:"input"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"issuable"},name:{kind:"Name",value:"issue"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"weight"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"errors"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:176}};n.loc.source={body:"mutation issueSetWeight($input: IssueSetWeightInput!) {\n  issuableSetWeight: issueSetWeight(input: $input) {\n    issuable: issue {\n      id\n      weight\n    }\n    errors\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};var a={};function t(e,i){for(var n=0;n<e.definitions.length;n++){var a=e.definitions[n];if(a.name&&a.name.value==i)return a}}n.definitions.forEach((function(e){if(e.name){var i=new Set;!function e(i,n){if("FragmentSpread"===i.kind)n.add(i.name.value);else if("VariableDefinition"===i.kind){var a=i.type;"NamedType"===a.kind&&n.add(a.name.value)}i.selectionSet&&i.selectionSet.selections.forEach((function(i){e(i,n)})),i.variableDefinitions&&i.variableDefinitions.forEach((function(i){e(i,n)})),i.definitions&&i.definitions.forEach((function(i){e(i,n)}))}(e,i),a[e.name.value]=i}})),e.exports=n,e.exports.issueSetWeight=function(e,i){var n={kind:e.kind,definitions:[t(e,i)]};e.hasOwnProperty("loc")&&(n.loc=e.loc);var d=a[i]||new Set,l=new Set,r=new Set;for(d.forEach((function(e){r.add(e)}));r.size>0;){var o=r;r=new Set,o.forEach((function(e){l.has(e)||(l.add(e),(a[e]||new Set).forEach((function(e){r.add(e)})))}))}return l.forEach((function(i){var a=t(e,i);a&&n.definitions.push(a)})),n}(n,"issueSetWeight")},ZVFC:function(e,i,n){var a={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"projectIssueIteration"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"fullPath"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"iid"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"workspace"},name:{kind:"Name",value:"project"},arguments:[{kind:"Argument",name:{kind:"Name",value:"fullPath"},value:{kind:"Variable",name:{kind:"Name",value:"fullPath"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"__typename"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",alias:{kind:"Name",value:"issuable"},name:{kind:"Name",value:"issue"},arguments:[{kind:"Argument",name:{kind:"Name",value:"iid"},value:{kind:"Variable",name:{kind:"Name",value:"iid"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"__typename"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",alias:{kind:"Name",value:"attribute"},name:{kind:"Name",value:"iteration"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"IterationFragment"},directives:[]}]}}]}}]}}]}}],loc:{start:0,end:304}};a.loc.source={body:'#import "./iteration.fragment.graphql"\n\nquery projectIssueIteration($fullPath: ID!, $iid: String!) {\n  workspace: project(fullPath: $fullPath) {\n    __typename\n    id\n    issuable: issue(iid: $iid) {\n      __typename\n      id\n      attribute: iteration {\n        ...IterationFragment\n      }\n    }\n  }\n}\n',name:"GraphQL request",locationOffset:{line:1,column:1}};var t={};a.definitions=a.definitions.concat(n("Aphk").definitions.filter((function(e){if("FragmentDefinition"!==e.kind)return!0;var i=e.name.value;return!t[i]&&(t[i]=!0,!0)})));var d={};function l(e,i){for(var n=0;n<e.definitions.length;n++){var a=e.definitions[n];if(a.name&&a.name.value==i)return a}}a.definitions.forEach((function(e){if(e.name){var i=new Set;!function e(i,n){if("FragmentSpread"===i.kind)n.add(i.name.value);else if("VariableDefinition"===i.kind){var a=i.type;"NamedType"===a.kind&&n.add(a.name.value)}i.selectionSet&&i.selectionSet.selections.forEach((function(i){e(i,n)})),i.variableDefinitions&&i.variableDefinitions.forEach((function(i){e(i,n)})),i.definitions&&i.definitions.forEach((function(i){e(i,n)}))}(e,i),d[e.name.value]=i}})),e.exports=a,e.exports.projectIssueIteration=function(e,i){var n={kind:e.kind,definitions:[l(e,i)]};e.hasOwnProperty("loc")&&(n.loc=e.loc);var a=d[i]||new Set,t=new Set,r=new Set;for(a.forEach((function(e){r.add(e)}));r.size>0;){var o=r;r=new Set,o.forEach((function(e){t.has(e)||(t.add(e),(d[e]||new Set).forEach((function(e){r.add(e)})))}))}return t.forEach((function(i){var a=l(e,i);a&&n.definitions.push(a)})),n}(a,"projectIssueIteration")},a6L4:function(e,i,n){"use strict";n.d(i,"s",(function(){return x})),n.d(i,"n",(function(){return W})),n.d(i,"q",(function(){return G})),n.d(i,"r",(function(){return L})),n.d(i,"p",(function(){return C})),n.d(i,"l",(function(){return M})),n.d(i,"f",(function(){return Q})),n.d(i,"e",(function(){return z})),n.d(i,"b",(function(){return H})),n.d(i,"a",(function(){return B})),n.d(i,"d",(function(){return Z})),n.d(i,"c",(function(){return ee})),n.d(i,"o",(function(){return ie})),n.d(i,"h",(function(){return ne})),n.d(i,"t",(function(){return ae})),n.d(i,"m",(function(){return te})),n.d(i,"j",(function(){return de}));var a=n("mpzd"),t=n("t9l/"),d=n("5ee2");n.d(i,"g",(function(){return d.e})),n.d(i,"i",(function(){return d.j})),n.d(i,"k",(function(){return d.m}));var l=n("+FWW"),r=n.n(l),o=n("wBFO"),s=n.n(o),u=n("Tq6+"),c=n.n(u),m=n("ETYA"),k=n.n(m),v=n("LGLi"),f=n.n(v),p=n("9yub"),N=n.n(p),S=n("Eb4Q"),h=n.n(S),b=n("30jG"),y=n.n(b),g=n("oSqK"),F=n.n(g),E=n("ZVFC"),D=n.n(E),V=n("VOyV"),w=n.n(V),P=n("UBgU"),I=n.n(P),O=n("kFHy"),_=n.n(O),j=n("1RJB"),T=n.n(j);const $="onTrack",q="needsAttention",A="atRisk",x=(Object(t.a)("Edit"),Object(t.a)("None")),W={[$]:Object(t.a)("On track"),[q]:Object(t.a)("Needs attention"),[A]:Object(t.a)("At risk")},G={iteration:Object(t.a)("Iteration"),noIteration:Object(t.a)("No iteration"),assignIteration:Object(t.a)("Assign Iteration"),iterationSelectFail:Object(t.a)("Failed to set iteration on this issue. Please try again."),currentIterationFetchError:Object(t.a)("Failed to fetch the iteration for this issue. Please try again."),iterationsFetchError:Object(t.a)("Failed to fetch the iterations for the group. Please try again."),noIterationsFound:Object(t.a)("No iterations found")},L=null,C="opened",M={NO_STATUS:"0",[$]:"on_track",[q]:"needs_attention",[A]:"at_risk"},Q=Object(t.a)("Escalation policy"),z=99999,H={dropdownHeaderText:Object(t.g)("Sidebar|Assign health status"),noStatusText:Object(t.g)("Sidebar|No status"),noneText:Object(t.g)("Sidebar|None"),selectPlaceholderText:Object(t.a)("Select health status")},B={action:Object(t.g)("CVE|Request CVE ID"),description:Object(t.g)("CVE|CVE ID Request"),createRequest:Object(t.g)("CVE|Create CVE ID Request"),whyRequest:Object(t.g)("CVE|Why Request a CVE ID?"),whyText1:Object(t.g)("CVE|Common Vulnerability Enumeration (CVE) identifiers are used to track distinct vulnerabilities in specific versions of code."),whyText2:Object(t.g)("CVE|As a maintainer, requesting a CVE for a vulnerability in your project will help your users stay secure and informed."),learnMore:Object(t.a)("Learn more")},U={[a.c.Issue]:{query:D.a,mutation:F.a}},R={[a.c.Issue]:{query:k.a}},J={[a.c.Issue]:{query:y.a,mutation:h.a}},X={[a.c.Issue]:{query:c.a}},K={[a.c.Issue]:{query:I.a,mutation:_.a}},Y={[a.c.Issue]:{query:T.a}},Z={...d.c,Iteration:"iteration",Epic:"epic",EscalationPolicy:"escalation policy"},ee={...d.b,[Z.Iteration]:"opened",[Z.Epic]:"opened"},ie={...d.n,[Z.Iteration]:{current:U,list:R},[Z.Epic]:{current:J,list:X},[Z.EscalationPolicy]:{current:K,list:Y}},ne={[a.c.Epic]:{query:s.a}},ae={[a.c.Issue]:{query:N.a,mutation:w.a}},te={[a.c.Issue]:{mutation:r.a,query:f.a},[a.c.Epic]:{mutation:r.a,query:f.a}};function de(e,i){let n=Object(t.g)("DropdownWidget|No %{issuableAttribute} found");return e===Z.Iteration&&(n=Object(t.g)("DropdownWidget|No open %{issuableAttribute} found")),{...Object(d.k)(e,i),noAttributesFound:Object(t.h)(n,{issuableAttribute:e})}}},kFHy:function(e,i,n){var a={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"issueEscalationPolicyMutation"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"fullPath"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"iid"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"attributeId"}},type:{kind:"NamedType",name:{kind:"Name",value:"IncidentManagementEscalationPolicyID"}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"issuableSetAttribute"},name:{kind:"Name",value:"issueSetEscalationPolicy"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"ObjectValue",fields:[{kind:"ObjectField",name:{kind:"Name",value:"projectPath"},value:{kind:"Variable",name:{kind:"Name",value:"fullPath"}}},{kind:"ObjectField",name:{kind:"Name",value:"iid"},value:{kind:"Variable",name:{kind:"Name",value:"iid"}}},{kind:"ObjectField",name:{kind:"Name",value:"escalationPolicyId"},value:{kind:"Variable",name:{kind:"Name",value:"attributeId"}}}]}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"__typename"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"errors"},arguments:[],directives:[]},{kind:"Field",alias:{kind:"Name",value:"issuable"},name:{kind:"Name",value:"issue"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"__typename"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",alias:{kind:"Name",value:"attribute"},name:{kind:"Name",value:"escalationPolicy"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"EscalationPolicyFragment"},directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"escalationStatus"},arguments:[],directives:[]}]}}]}}]}}],loc:{start:0,end:506}};a.loc.source={body:'#import "./escalation_policy.fragment.graphql"\n\nmutation issueEscalationPolicyMutation(\n  $fullPath: ID!\n  $iid: String!\n  $attributeId: IncidentManagementEscalationPolicyID\n) {\n  issuableSetAttribute: issueSetEscalationPolicy(\n    input: { projectPath: $fullPath, iid: $iid, escalationPolicyId: $attributeId }\n  ) {\n    __typename\n    errors\n    issuable: issue {\n      __typename\n      id\n      attribute: escalationPolicy {\n        ...EscalationPolicyFragment\n      }\n      escalationStatus\n    }\n  }\n}\n',name:"GraphQL request",locationOffset:{line:1,column:1}};var t={};a.definitions=a.definitions.concat(n("vBMq").definitions.filter((function(e){if("FragmentDefinition"!==e.kind)return!0;var i=e.name.value;return!t[i]&&(t[i]=!0,!0)})));var d={};function l(e,i){for(var n=0;n<e.definitions.length;n++){var a=e.definitions[n];if(a.name&&a.name.value==i)return a}}a.definitions.forEach((function(e){if(e.name){var i=new Set;!function e(i,n){if("FragmentSpread"===i.kind)n.add(i.name.value);else if("VariableDefinition"===i.kind){var a=i.type;"NamedType"===a.kind&&n.add(a.name.value)}i.selectionSet&&i.selectionSet.selections.forEach((function(i){e(i,n)})),i.variableDefinitions&&i.variableDefinitions.forEach((function(i){e(i,n)})),i.definitions&&i.definitions.forEach((function(i){e(i,n)}))}(e,i),d[e.name.value]=i}})),e.exports=a,e.exports.issueEscalationPolicyMutation=function(e,i){var n={kind:e.kind,definitions:[l(e,i)]};e.hasOwnProperty("loc")&&(n.loc=e.loc);var a=d[i]||new Set,t=new Set,r=new Set;for(a.forEach((function(e){r.add(e)}));r.size>0;){var o=r;r=new Set,o.forEach((function(e){t.has(e)||(t.add(e),(d[e]||new Set).forEach((function(e){r.add(e)})))}))}return t.forEach((function(i){var a=l(e,i);a&&n.definitions.push(a)})),n}(a,"issueEscalationPolicyMutation")},kyXN:function(e,i){var n={kind:"Document",definitions:[{kind:"FragmentDefinition",name:{kind:"Name",value:"EpicFragment"},typeCondition:{kind:"NamedType",name:{kind:"Name",value:"Epic"}},directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"title"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"webUrl"},arguments:[],directives:[]}]}}],loc:{start:0,end:56}};n.loc.source={body:"fragment EpicFragment on Epic {\n  id\n  title\n  webUrl\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};e.exports=n},oSqK:function(e,i){var n={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"projectIssueIterationMutation"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"fullPath"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"iid"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"attributeId"}},type:{kind:"NamedType",name:{kind:"Name",value:"ID"}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"issuableSetAttribute"},name:{kind:"Name",value:"issueSetIteration"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"ObjectValue",fields:[{kind:"ObjectField",name:{kind:"Name",value:"projectPath"},value:{kind:"Variable",name:{kind:"Name",value:"fullPath"}}},{kind:"ObjectField",name:{kind:"Name",value:"iid"},value:{kind:"Variable",name:{kind:"Name",value:"iid"}}},{kind:"ObjectField",name:{kind:"Name",value:"iterationId"},value:{kind:"Variable",name:{kind:"Name",value:"attributeId"}}}]}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"__typename"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"errors"},arguments:[],directives:[]},{kind:"Field",alias:{kind:"Name",value:"issuable"},name:{kind:"Name",value:"issue"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"__typename"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",alias:{kind:"Name",value:"attribute"},name:{kind:"Name",value:"iteration"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"title"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"state"},arguments:[],directives:[]}]}}]}}]}}]}}],loc:{start:0,end:377}};n.loc.source={body:"mutation projectIssueIterationMutation($fullPath: ID!, $iid: String!, $attributeId: ID) {\n  issuableSetAttribute: issueSetIteration(\n    input: { projectPath: $fullPath, iid: $iid, iterationId: $attributeId }\n  ) {\n    __typename\n    errors\n    issuable: issue {\n      __typename\n      id\n      attribute: iteration {\n        title\n        id\n        state\n      }\n    }\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};var a={};function t(e,i){for(var n=0;n<e.definitions.length;n++){var a=e.definitions[n];if(a.name&&a.name.value==i)return a}}n.definitions.forEach((function(e){if(e.name){var i=new Set;!function e(i,n){if("FragmentSpread"===i.kind)n.add(i.name.value);else if("VariableDefinition"===i.kind){var a=i.type;"NamedType"===a.kind&&n.add(a.name.value)}i.selectionSet&&i.selectionSet.selections.forEach((function(i){e(i,n)})),i.variableDefinitions&&i.variableDefinitions.forEach((function(i){e(i,n)})),i.definitions&&i.definitions.forEach((function(i){e(i,n)}))}(e,i),a[e.name.value]=i}})),e.exports=n,e.exports.projectIssueIterationMutation=function(e,i){var n={kind:e.kind,definitions:[t(e,i)]};e.hasOwnProperty("loc")&&(n.loc=e.loc);var d=a[i]||new Set,l=new Set,r=new Set;for(d.forEach((function(e){r.add(e)}));r.size>0;){var o=r;r=new Set,o.forEach((function(e){l.has(e)||(l.add(e),(a[e]||new Set).forEach((function(e){r.add(e)})))}))}return l.forEach((function(i){var a=t(e,i);a&&n.definitions.push(a)})),n}(n,"projectIssueIterationMutation")},vBMq:function(e,i){var n={kind:"Document",definitions:[{kind:"FragmentDefinition",name:{kind:"Name",value:"EscalationPolicyFragment"},typeCondition:{kind:"NamedType",name:{kind:"Name",value:"EscalationPolicyType"}},directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"__typename"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",alias:{kind:"Name",value:"title"},name:{kind:"Name",value:"name"},arguments:[],directives:[]}]}}],loc:{start:0,end:94}};n.loc.source={body:"fragment EscalationPolicyFragment on EscalationPolicyType {\n  __typename\n  id\n  title: name\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};e.exports=n},wBFO:function(e,i){var n={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"epicAncestors"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"fullPath"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"iid"}},type:{kind:"NamedType",name:{kind:"Name",value:"ID"}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"workspace"},name:{kind:"Name",value:"group"},arguments:[{kind:"Argument",name:{kind:"Name",value:"fullPath"},value:{kind:"Variable",name:{kind:"Name",value:"fullPath"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"__typename"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",alias:{kind:"Name",value:"issuable"},name:{kind:"Name",value:"epic"},arguments:[{kind:"Argument",name:{kind:"Name",value:"iid"},value:{kind:"Variable",name:{kind:"Name",value:"iid"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"__typename"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"ancestors"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"nodes"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"title"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"state"},arguments:[],directives:[]},{kind:"Field",alias:{kind:"Name",value:"url"},name:{kind:"Name",value:"webUrl"},arguments:[],directives:[]}]}}]}}]}}]}}]}}],loc:{start:0,end:301}};n.loc.source={body:"query epicAncestors($fullPath: ID!, $iid: ID) {\n  workspace: group(fullPath: $fullPath) {\n    __typename\n    id\n    issuable: epic(iid: $iid) {\n      __typename\n      id\n      ancestors {\n        nodes {\n          id\n          title\n          state\n          url: webUrl\n        }\n      }\n    }\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};var a={};function t(e,i){for(var n=0;n<e.definitions.length;n++){var a=e.definitions[n];if(a.name&&a.name.value==i)return a}}n.definitions.forEach((function(e){if(e.name){var i=new Set;!function e(i,n){if("FragmentSpread"===i.kind)n.add(i.name.value);else if("VariableDefinition"===i.kind){var a=i.type;"NamedType"===a.kind&&n.add(a.name.value)}i.selectionSet&&i.selectionSet.selections.forEach((function(i){e(i,n)})),i.variableDefinitions&&i.variableDefinitions.forEach((function(i){e(i,n)})),i.definitions&&i.definitions.forEach((function(i){e(i,n)}))}(e,i),a[e.name.value]=i}})),e.exports=n,e.exports.epicAncestors=function(e,i){var n={kind:e.kind,definitions:[t(e,i)]};e.hasOwnProperty("loc")&&(n.loc=e.loc);var d=a[i]||new Set,l=new Set,r=new Set;for(d.forEach((function(e){r.add(e)}));r.size>0;){var o=r;r=new Set,o.forEach((function(e){l.has(e)||(l.add(e),(a[e]||new Set).forEach((function(e){r.add(e)})))}))}return l.forEach((function(i){var a=t(e,i);a&&n.definitions.push(a)})),n}(n,"epicAncestors")}}]);
//# sourceMappingURL=22.1a7f97ab.chunk.js.map